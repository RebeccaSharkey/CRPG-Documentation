{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Why is index broke??</p>"},{"location":"#game-documentation-hub","title":"Game Documentation Hub","text":"<p>Welcome to the Game Documentation Hub, your central resource for all information related to the development of the game. This hub includes detailed breakdowns of the game's design, mechanics, codebase, and workflows in Unreal Engine 5.</p> <p>Explore the sections below to understand the core design principles, technical implementation, and development strategies behind the project.</p>"},{"location":"#game-design-document-gdd","title":"Game Design Document (GDD)","text":"<p>The Game Design Document (GDD) lays the foundation for the entire project. It provides an in-depth look at the core concept, mechanics, story, and systems that make up the game. This includes:</p> <ul> <li>Core Concept: The game\u2019s world, its central conflict, and the high-fantasy elements that drive its narrative.</li> <li>Story and Setting: The overarching plot, from the mysterious Lord Ruler who has eradicated magic, to the various courts and regions under his control.</li> <li>Gameplay Mechanics: The game\u2019s turn-based combat system, featuring d20 rolls, initiative orders, movement, and attacks.</li> <li>Classes and Abilities: An extensive system of classes and subclasses that allow players to build unique characters, each with a progression tree leading to powerful abilities.</li> <li>Progression System: How players level up, unlock abilities, and progress through the game world.</li> </ul> <p>The GDD is the go-to document for understanding the vision and design direction of the project.</p>"},{"location":"#further-design-information","title":"Further Design Information","text":"<p>The Further Design Information section goes beyond the initial design and explores additional features, evolving mechanics, and aesthetic decisions. This includes:</p> <ul> <li>Advanced Gameplay Mechanics: Mechanics like fog of war, ambush triggers, and dynamic events that enhance tactical gameplay.</li> <li>Art Direction: Detailed notes on the visual aesthetic for different regions and factions, from scorched landscapes in the Fire Court to ethereal ice environments in the Frost Court.</li> <li>Planned Features: Upcoming or potential features such as crafting systems, expanded dialogue mechanics, or multiplayer capabilities.</li> </ul> <p>This section is crucial for tracking how the game design evolves during development.</p>"},{"location":"#code-documentation","title":"Code Documentation","text":"<p>The Code Documentation section provides an in-depth technical reference for the game's codebase. It covers:</p> <ul> <li>Core System Architecture: A breakdown of the main C++ classes, including the player controller, character classes, and ability system integration.</li> <li>Gameplay Ability System (GAS): How the Unreal Engine\u2019s Gameplay Ability System is implemented to manage player abilities, attributes, and effects.</li> <li>Important Code Snippets: Critical code examples, including player movement, camera control, party management, and interaction mechanics.</li> <li>Optimization Strategies: Techniques used to ensure the game runs efficiently, from code-level optimizations to blueprint and asset management.</li> </ul> <p>This section is essential for developers working on the project or anyone interested in the technical aspects of game development.</p>"},{"location":"#engine-workflows","title":"Engine Workflows","text":"<p>The Engine Workflows section provides detailed guides on using Unreal Engine 5 to build the game. This section includes:</p> <ul> <li>Level Design Workflow: Techniques for designing and populating levels, including the use of World Partition for large, dynamic environments.</li> <li>Asset Management: Best practices for managing large assets, optimizing game performance, and maintaining scalability across the game world.</li> <li>Blueprint Integration: How blueprints are used alongside C++ code to prototype and rapidly implement gameplay features.</li> <li>Automation and Tools: Custom tools and workflows to speed up development, including automation pipelines for asset generation and testing.</li> </ul> <p>This section is a go-to resource for understanding how Unreal Engine 5 is leveraged to create the game's world and systems.</p>"},{"location":"#conclusion","title":"Conclusion","text":"<p>This Documentation Hub serves as the central point for all aspects of the game\u2019s development, providing both high-level design insights and detailed technical guides. It is continually updated as the project evolves, ensuring that everyone involved in the development process has access to the most up-to-date information.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/1.%20Game%20Overview/","title":"Game Overview","text":"<p>Warning</p> <p>Work in progress.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/1.%20Game%20Overview/#11-genre","title":"1.1. Genre","text":"<p>High Fantasy, Turn-based tactical RPG (TTRPG), d20 system*</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/1.%20Game%20Overview/#12-inspiration","title":"1.2. Inspiration","text":""},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/1.%20Game%20Overview/#121-story","title":"1.2.1. Story","text":"<p>Mistborn, Throne of Glass</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/1.%20Game%20Overview/#122-gameplay-mechanics","title":"1.2.2. Gameplay / Mechanics:","text":"<p>DnD, Pathfinder, Baulders Gate 3, Pathfinder: KM / WOTR, Helldivers 2</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/1.%20Game%20Overview/#13-perspective","title":"1.3. Perspective","text":"<p>Top-Down, Point-and-Click or WASD / Joystick-controlled movement</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/1.%20Game%20Overview/#14-combat-style","title":"1.4. Combat Style","text":"<p>Turn-Based, d20 system* with Initiative, movement and actions.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/1.%20Game%20Overview/#15-platforms","title":"1.5. Platforms","text":"<p>PC (additional platforms TBD)</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/1.%20Game%20Overview/#12-target-audience","title":"1.2. Target Audience","text":"<p>Fans of High Fantasy RPGs, Turn-Based Tactical RPGs, and Rich Narrative-Driven Experiences.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/10.%20World%20Design%20and%20Exploration/","title":"World Design and Exploration","text":"<p>Warning</p> <p>Work in progress.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/10.%20World%20Design%20and%20Exploration/#101-interconnected-map","title":"10.1. Interconnected Map","text":"<p>The game world is a vast and interconnected realm, with the Lord Ruler\u2019s domain at the center. Players are free to explore in a non-linear fashion, moving between different regions known as courts, each associated with one of the playable classes. The map is not constrained by a ring layout, but rather by natural, geographic, and magical borders that give each court its unique characteristics and challenges.</p> <ul> <li>Court Layout: Each court is thematically tied to a playable class, and its design reflects the class\u2019s traits, culture, and aesthetics. For example:<ul> <li>The Elemental Court (associated with the Elemental Channeler) is dominated by dynamic natural forces, with raging storms, volcanic landscapes, and tranquil oceans.</li> <li>The Echo Court (associated with the Echo Weaver) is a vibrant realm of music and art, where sound, color, and creativity shape the environment.</li> <li>The Technomancer\u2019s Court is a fusion of advanced magical technology and mechanical constructs, filled with intricate machinery and towering magical devices.</li> </ul> </li> <li>Non-Linear Exploration: Players can explore the courts in any order, but the corruption mechanic will influence the difficulty of each region. Courts that are left unchecked for too long will become more corrupted, increasing enemy strength and locking out certain quests or opportunities.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/10.%20World%20Design%20and%20Exploration/#102-court-design-and-features","title":"10.2. Court Design and Features","text":"<p>Each court serves as a hub for specific gameplay elements, such as quests, class progression, and world-building. Liberating a court will unlock unique class abilities, spells, and upgrades, as well as unraveling the lore tied to that court.</p> <ul> <li> <p>Unique Court Environments: Courts are visually distinct, showcasing different biomes and architectural styles that reflect the class they represent. From wild forests and sacred totems in the Beastmaster\u2019s Court, to the otherworldly dimension-bending landscapes of the Dimensional Reaver\u2019s Court, the world will be full of variety and intrigue.</p> </li> <li> <p>Corruption and World Progression: Corruption spreads across the realm as the Lord Ruler\u2019s influence grows. This mechanic will affect each court, causing its landscape, enemies, and quests to become more challenging over time. Players must balance exploration and court liberation to prevent the world from becoming overrun by corruption.</p> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/10.%20World%20Design%20and%20Exploration/#103-exploration-and-player-freedom","title":"10.3. Exploration and Player Freedom","text":"<p>Exploration plays a key role in the game\u2019s design, with players able to uncover hidden secrets, lore, and treasures by venturing into the deepest corners of each court. Players will need to manage their time and resources wisely, balancing exploration, combat, and resting to counter the spread of corruption.</p> <ul> <li> <p>Dynamic World Events: As players explore, they will encounter dynamic world events\u2014such as corrupted beasts attacking towns, magical anomalies in the environment, or court-specific challenges\u2014that change based on the current corruption level. These events offer opportunities for valuable rewards or to slow down the spread of corruption.</p> </li> <li> <p>Fast Travel and Movement: Players will have access to fast travel between liberated courts, but early on, they will need to traverse the world on foot, using mounts or spells to cover greater distances. Special pathways, magical portals, or hidden shortcuts can also be discovered as players explore.</p> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/10.%20World%20Design%20and%20Exploration/#104-environmental-interactivity","title":"10.4. Environmental Interactivity","text":"<p>The world of the game is rich with interactive elements. Players can interact with various objects in the environment, solve puzzles, and manipulate their surroundings to gain an advantage in combat or exploration.</p> <ul> <li> <p>Environmental Puzzles: Some courts will feature puzzles or challenges that players must solve to unlock secrets or progress in quests. These puzzles will often be tied to the court\u2019s theme (e.g., using elemental powers in the Elemental Court or manipulating sound in the Echo Court).</p> </li> <li> <p>Hidden Areas and Secrets: The game world is full of hidden areas, treasures, and lore entries that players can discover through exploration. Some secrets will only be accessible after liberating certain courts or unlocking specific abilities tied to those courts.</p> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/2.%20Core%20Concept%20and%20Vision/","title":"Core Concept and Vision","text":"<p>Warning</p> <p>Work in progress.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/2.%20Core%20Concept%20and%20Vision/#21-game-overview","title":"2.1 Game Overview","text":"<p>This game is a tactical, turn-based RPG set in a high fantasy world where the balance of power has been disrupted by the Lord Ruler, a powerful demon who has conquered the realm and eradicated magic to make demons unkillable. The player takes on the role of a character with ties to nobility, who starts the game imprisoned in a parallel realm. The player must free themselves, gather allies, and liberate the courts\u2014each tied to one of the game's unique playable classes\u2014from the Lord Ruler\u2019s corruption.</p> <p>The story, gameplay, and setting are deeply interconnected, offering a blend of high fantasy, dark themes, and imaginative, fantastical elements. The game places a strong emphasis on player choice and non-linear progression, allowing the player to decide which courts to tackle first. However, corruption spreads over time, raising the stakes and making unliberated courts increasingly difficult to clear.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/2.%20Core%20Concept%20and%20Vision/#22-key-features","title":"2.2 Key Features","text":"<ul> <li> <p>Turn-Based Tactical Combat: Combat is grid-based and turn-based, with a focus on tactical positioning, resource management (AP and MP), and class synergy. Each class has distinct abilities that can be combined for devastating effects in combat.</p> </li> <li> <p>Class Skill Trees: The game offers 8 unique classes, each with 5 subclass branches. Players can customize their characters by investing in any of the branches, blending class abilities to create hybrid builds. The subclasses represent typical archetypes like tank, healer, support, close DPS, and ranged DPS, but with fantastical and imaginative twists.</p> </li> <li> <p>Court-Based Exploration: The world is divided into courts, each representing one of the playable classes. Players must liberate the courts to gain access to class-specific abilities and lore, while also unlocking powerful spells tied to the court they are freeing. The map is interconnected, allowing players to choose their own path toward the Lord Ruler.</p> </li> <li> <p>Dynamic Corruption Mechanic: As players progress, corruption spreads throughout the realm, making enemies tougher and courts harder to liberate. Resting also impacts the corruption mechanic, forcing players to balance their resource recovery with the growing corruption threat.</p> </li> <li> <p>Multiple Endings: The player\u2019s choices throughout the game, including which courts to liberate and how they handle the spread of corruption, will lead to multiple endings. These endings range from total victory over the Lord Ruler to more bittersweet or tragic outcomes if the corruption becomes too widespread.</p> </li> <li> <p>Companions and Party System: Players can recruit a variety of companions from different courts, each with their own backstories and unique abilities. The party system allows for up to 4 characters, with class synergies being key to success in combat.</p> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/2.%20Core%20Concept%20and%20Vision/#23-narrative-themes","title":"2.3 Narrative Themes","text":"<ul> <li> <p>The Struggle Against Corruption: The game\u2019s primary narrative focuses on liberating the world from the corruption spread by the Lord Ruler. As the player explores the courts and uncovers the truth behind the realm\u2019s downfall, they will discover deep, dark secrets about the nobility and the Lord Ruler\u2019s origins as a demon from a parallel realm.</p> </li> <li> <p>Player Freedom and Responsibility: The player is given the freedom to choose how they approach each court, but their decisions have long-lasting consequences. Every rest taken, every court liberated or left unchecked, and every ally gained or lost will influence the game\u2019s outcome.</p> </li> <li> <p>Fantasy and Imagination: The world is rich with fantastical elements, blending high fantasy with imaginative class designs, magical creatures, and surreal settings. From the Elemental Channeler\u2019s mastery of primal forces to the Echo Weaver\u2019s manipulation of sound and art, the game leans into creativity and the unexpected.</p> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/2.%20Core%20Concept%20and%20Vision/#24-gameplay-loop","title":"2.4 Gameplay Loop","text":"<p>The core gameplay loop involves:</p> <ol> <li> <p>Exploration: Players travel between courts, exploring unique environments, engaging in quests, and uncovering lore.</p> </li> <li> <p>Combat: Engaging in tactical, turn-based combat where players can combine abilities, manage resources, and utilize their environment to gain the upper hand.</p> </li> <li> <p>Resting and Corruption Management: Players must decide when to rest to recover AP, MP, and HP. Resting accelerates the spread of corruption, making decisions about timing crucial.</p> </li> <li> <p>Quest Completion and Court Liberation: Each court offers quests related to its culture, class, and the overarching narrative. Liberating courts rewards the player with powerful class-specific abilities and slows the spread of corruption.</p> </li> </ol>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/2.%20Core%20Concept%20and%20Vision/#25-aesthetic-and-tone","title":"2.5 Aesthetic and Tone","text":"<ul> <li> <p>Art Style: The game\u2019s art direction will blend high fantasy with a slightly dark, surreal aesthetic. Courts will be distinct in their visual design, reflecting the nature of the class they represent. For example, the Fatespinner\u2019s court will be mysterious, with dreamlike visuals, while the Technomancer\u2019s court will feature advanced, magical technology.</p> </li> <li> <p>Tone: While the game features dark and serious themes (such as corruption and the fall of nobility), it will also emphasize fantasy, creativity, and wonder. The world is meant to feel vast, magical, and full of possibilities, even as the corruption threatens to engulf it.</p> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/3.%20Key%20Features/","title":"Key Features","text":"<p>Warning</p> <p>Work in progress.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/3.%20Key%20Features/#31-turn-based-combat-system","title":"3.1. Turn-Based Combat System:","text":"<p>Tactical, d20-based combat with initiative, movement, and action points.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/3.%20Key%20Features/#32-court-liberation-mechanic","title":"3.2. Court Liberation Mechanic:","text":"<p>Liberate courts one by one, breaking their curses and unlocking unique spells and abilities tied to the court\u2019s culture and aesthetics.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/3.%20Key%20Features/#33-dynamic-corruption-mechanic","title":"3.3. Dynamic Corruption Mechanic:","text":"<p>As the player progresses, corruption spreads to other courts. The longer the player takes, the more difficult and corrupt the courts become.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/3.%20Key%20Features/#34-character-creation","title":"3.4. Character Creation:","text":"<p>Players customize their character using a point-buy stat system and can choose from 7 classes, each with 5 unique subclasses each, allowing for deep customization and varied playstyles.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/3.%20Key%20Features/#35-multiple-endings","title":"3.5. Multiple Endings:","text":"<p>Player choices will drastically affect the outcome of the game, with multiple possible endings based on which courts were liberated, the player's alliances, and whether the true nature of the Lord Ruler was revealed.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/3.%20Key%20Features/#36-rest-system","title":"3.6. Rest System:","text":"<p>Players must balance resting with progress, as resting advances the day-night cycle and spreads corruption, increasing the challenge in remaining courts.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/3.%20Key%20Features/#37-primal-worship-system","title":"3.7. Primal Worship System:","text":"<p>Players choose a Primal (deity-like figure) to worship, which grants them unique boons and abilities. Different NPCs also follow Primals, impacting interactions and quest outcomes.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/","title":"Gameplay Mechanics","text":"<p>Warning</p> <p>Work in progress.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#41-stat-system","title":"4.1. Stat System","text":"<p>The game\u2019s stat system governs core attributes that influence a character\u2019s abilities and interactions. The stats are:</p> <ul> <li>Vitality (VIT): Governs HP, Stamina, and Physical resilience.</li> <li>Agility (AGI): Governs movement Speed, Initiative, precision-based attacks and dodge chance.</li> <li>Power (PWR): Governs physical attack damage and carrying capacity.</li> <li>Arcana (ARC): Governs magic power and the size of the Mana Pool (MP).</li> <li>Wisdom (WIS): Governs mental acuity, perception, and MP regeneration.</li> <li>Resilience (RES): Governs defences against status effects, environmental hazards, and long-term damage.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#42-action-points-ap-and-mana-points-mp","title":"4.2. Action Points (AP) and Mana Points (MP)","text":""},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#ap-action-points-system","title":"AP (Action Points) System:","text":"<ul> <li>Max AP Pool: Determined by the Vitality modifier * 3.<ul> <li>Example: If a player has 16 Vitality (+3 modifier), their Max AP Pool would be 3 * 3 = 9 AP.</li> </ul> </li> <li>AP Regeneration: Determined by the formula:<ul> <li>AP Regeneration = (Agility modifier * 2) + Vitality modifier</li> <li>Example: If a player has 16 Vitality (+3 modifier) and 14 Agility (+2 modifier), their AP regeneration would be (2 * 2) + 3 = 7 AP per turn.</li> </ul> </li> <li>Cap on Regeneration: The AP regeneration per turn cannot exceed the player's Max AP Pool, determined by their Vitality modifier.<ul> <li>Example: If a player\u2019s Max AP is 9 AP, their AP regeneration cannot go higher than 9 AP per turn, even if modifiers suggest more.</li> </ul> </li> <li>Minimum AP Regeneration: Players always regenerate at least 2 AP per turn, even if diminishing returns affect their regeneration rate.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#mp-mana-points-system","title":"MP (Mana Points) System:","text":"<ul> <li>Max MP Pool: Determined by the Arcana modifier * 3.<ul> <li>Example: If a player has 14 Arcana (+2 modifier), their Max MP Pool would be 2 * 3 = 6 MP.</li> </ul> </li> <li>MP Regeneration: Determined by the formula:<ul> <li>MP Regeneration = (Wisdom modifier * 2) + Arcana modifier</li> <li>Example: If a player has 16 Wisdom (+3 modifier) and 14 Arcana (+2 modifier), their MP regeneration would be (3 * 2) + 2 = 8 MP per turn.</li> </ul> </li> <li>Cap on Regeneration: The MP regeneration per turn cannot exceed the player's Max MP Pool, determined by their Arcana modifier.<ul> <li>Example: If a player\u2019s Max MP is 6 MP, their MP regeneration cannot exceed 6 MP per turn.</li> </ul> </li> <li>Minimum MP Regeneration: Players always regenerate at least 2 MP per turn, even if diminishing returns affect their regeneration rate.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#43-combat-system-overview","title":"4.3. Combat System Overview","text":"<ul> <li>Turn-Based Combat: Combat will follow an initiative-based system where players and enemies take turns performing actions based on their initiative order, governed by Agility.</li> <li>Action Economy: Players use AP to perform actions like moving, attacking, or casting spells, which regenerates each turn based on Agility and Vitality. Spellcasting or Magical Abilities also requires MP, which regenerates each turn based on Arcana and Wisdom.</li> <li>Court-Specific Abilities: Each court has its own unique set of spells and abilities that the player can unlock after liberating the court. Players from a particular court gain enhanced versions of those abilities.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#44-rest-and-corruption-system-overview","title":"4.4. Rest and Corruption System Overview","text":""},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#full-rest","title":"Full Rest:","text":"<ul> <li>Effect: Fully restores the player's HP, AP, and MP pools and resets the diminishing returns for AP and MP regeneration to their initial values.</li> <li>Corruption Impact: Taking a full rest significantly advances corruption in the courts, making enemies stronger and possibly locking off certain quests.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#half-rest","title":"Half Rest:","text":"<ul> <li>Effect:<ul> <li>A half rest adds the player's Vitality modifier to their AP regeneration and their Arcana modifier to their MP regeneration. This increase is permanent until the next rest, and the regeneration rate will continue with the new increased values.</li> <li>The regeneration boost from a half rest still respects the Max Pool cap for both AP and MP.</li> </ul> </li> <li>Corruption Impact: Half rests cause a moderate amount of corruption spread, but less than full rests.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#45-dialogue-and-interaction-mechanics","title":"4.5. Dialogue and Interaction Mechanics","text":"<p>The game will feature various forms of interactions outside of combat, including persuasion checks, knowledge checks, and perception-based actions that impact the way the player navigates the world and interacts with NPCs and objects. Below are the main types of interaction mechanics:</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#451-persuasion-checks","title":"4.5.1. Persuasion Checks","text":"<p>Persuasion checks allow players to influence NPCs during conversations. These checks open up additional dialogue options, help avoid conflict, and unlock quests or items that wouldn\u2019t be available otherwise.</p> <ul> <li>Types of Persuasion:<ul> <li>Diplomatic Persuasion: Based on Wisdom. Used for calm reasoning, negotiating, or understanding the motivations of others.</li> <li>Intimidation: Based on Power. Used to coerce or threaten NPCs into submission.</li> <li>Arcane Persuasion: Based on Arcana. Used when dealing with magical creatures, sentient constructs, or ancient beings familiar with magic.</li> </ul> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#452-knowledge-checks","title":"4.5.2. Knowledge Checks","text":"<p>Knowledge checks give players the ability to unlock hidden lore, decipher texts, and understand magical items or symbols. These checks often provide players with key information needed to progress through quests or access special abilities.</p> <ul> <li>Arcana Checks: Based on Arcana. Used to understand and interact with magical items, ancient arcane symbols, and enchanted locations.</li> <li>Wisdom Checks: Based on Wisdom. Used to comprehend historical events, navigate complex social structures, or analyze strategic environments.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#453-perception-and-insight-checks","title":"4.5.3. Perception and Insight Checks","text":"<p>Perception and Insight checks determine a player\u2019s ability to notice details in the environment, uncover hidden information, and detect lies or intent during dialogue.</p> <ul> <li> <p>Perception: Based on Wisdom and Agility. This check allows the player to find hidden traps, objects, or paths in the environment, as well as identify subtle environmental changes that can affect gameplay.</p> <ul> <li>Buffs: Higher Wisdom improves a player's awareness of magical or arcane elements in the environment, while Agility enhances the player\u2019s ability to react quickly to physical changes, such as noticing traps or enemies in stealth.</li> <li> <p>Insight: Based on Wisdom. Insight checks allow the player to detect lies or hidden motives during dialogue, as well as gain deeper understanding of NPC emotions and intentions.</p> </li> <li> <p>Buffs: A higher Wisdom score increases the chance of accurately reading characters, uncovering deception, and unlocking hidden dialogue options.</p> </li> </ul> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#454-investigation","title":"4.5.4. Investigation","text":"<p>Investigation checks are used when the player needs to closely examine an object or area. Unlike Perception, which focuses on noticing hidden things at a glance, Investigation requires the player to dig deeper, analyze, and piece together clues.</p> <ul> <li>Investigation: Based on Wisdom and Arcana. This allows the player to thoroughly analyze objects, structures, or magical wards, piecing together clues that might otherwise go unnoticed. Investigation often plays a key role in solving puzzles or unraveling mysteries.<ul> <li>Buffs: High Wisdom allows better insight into objects or symbols with historical relevance, while Arcana enhances the player\u2019s ability to understand magical or enchanted items.</li> </ul> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#455-survival-and-tracking","title":"4.5.5. Survival and Tracking","text":"<p>Survival and tracking checks allow the player to navigate dangerous terrain, find resources in the wild, or follow tracks left by enemies or animals.</p> <ul> <li>Survival: Based on Vitality and Wisdom. This governs the player's ability to find food, water, or shelter, as well as their ability to endure environmental hazards.<ul> <li>Buffs: Higher Vitality improves stamina and resilience in harsh environments, while Wisdom increases a player's ability to navigate natural environments and make strategic decisions.</li> </ul> </li> <li>Tracking: Based on Wisdom and Agility. Used to follow the footprints of enemies, animals, or even magical creatures through forests, deserts, or urban settings.<ul> <li>Buffs: Higher Wisdom allows players to read terrain and notice subtle signs of movement, while Agility improves speed and precision when pursuing targets.</li> </ul> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#46-types-of-interaction-mechanics","title":"4.6. Types of Interaction Mechanics","text":"<p>Interaction mechanics are categorized into the following types, each of which is influenced by the player\u2019s stats:</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#461-conversational-interactions","title":"4.6.1. Conversational Interactions","text":"<p>These are primarily dialogue-based and rely on persuasion and insight mechanics to influence NPCs, uncover hidden dialogue options, or avoid unnecessary combat.</p> <ul> <li>Stat Focus: Wisdom, Power, Arcana<ul> <li>Persuasion (Diplomatic, Intimidation, Arcane)</li> <li>Insight (to detect lies, hidden motives, or NPC emotions)</li> </ul> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#462-environmental-interactions","title":"4.6.2. Environmental Interactions","text":"<p>Environmental interactions allow the player to notice, analyse, or react to details in the environment. These mechanics include perception checks to find traps or hidden objects, as well as investigation checks for more thorough analysis.</p> <ul> <li>Stat Focus: Wisdom, Agility, Arcana<ul> <li>Perception (finding hidden objects, traps, or environmental changes)</li> <li>Investigation (analysing objects, discovering clues, understanding arcane or magical effects)</li> </ul> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#463-knowledge-based-interactions","title":"4.6.3. Knowledge-Based Interactions","text":"<p>These interactions involve the player\u2019s ability to understand historical events, lore, or magical phenomena. Knowledge checks are crucial for deciphering ancient texts, unlocking powerful relics, or interacting with magical artifacts.</p> <ul> <li>Stat Focus: Wisdom, Arcana<ul> <li>Arcana Checks (understanding magic-related elements)</li> <li>Wisdom Checks (analysing historical or cultural information)</li> </ul> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#464-survival-based-interactions","title":"4.6.4. Survival-Based Interactions","text":"<p>These interactions are critical when the player is navigating difficult terrains, searching for resources, or tracking enemies and animals. They allow the player to survive in harsh environments and gain advantages when exploring the wilderness.</p> <ul> <li>Stat Focus: Vitality, Wisdom, Agility<ul> <li>Survival (finding food, shelter, resources)</li> <li>Tracking (following footprints, reading signs of movement)</li> </ul> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#47-stat-buffs-for-perception-and-insight","title":"4.7. Stat Buffs for Perception and Insight","text":"<ul> <li> <p>Perception Buffs:</p> <ul> <li>Wisdom: Increases awareness of magical or hidden details in the environment.</li> <li>Agility: Enhances reaction time, allowing the player to notice physical threats like traps or hidden enemies.</li> <li> <p>Insight Buffs:</p> </li> <li> <p>Wisdom: Boosts the ability to read NPC emotions, detect lies, and understand motives during conversations.</p> </li> </ul> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#48-ability-tree-system-and-progression","title":"4.8 Ability Tree System and Progression","text":"<p>Each class has a non-linear ability tree divided into multiple branches. These branches represent the subclass archetypes such as Tank, Healer, Support, Close DPS, and Ranged DPS. The tree grows outward as players invest Ability Points (AP), and players can freely switch between branches to create hybrid builds or specialize in a single role.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#481-active-abilities-and-buffs","title":"4.8.1 Active Abilities and Buffs","text":"<ul> <li>Active Abilities: Spells, skills, or attacks that players can equip and use in combat. Players unlock more active abilities as they level up, with the number of active abilities increasing over time.</li> <li>Buffs (Passives): Permanent bonuses that improve stats, reduce cooldowns, or increase ability effectiveness. Buffs are unlocked similarly to active abilities and can be used to strengthen a player\u2019s build.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#482-ability-point-investment","title":"4.8.2 Ability Point Investment","text":"<ul> <li>Players gain 1 Ability Point (AP) per level, which can be used to unlock either active abilities or buffs within the tree.</li> <li>Players can choose to invest in one subclass or branch into others.<ul> <li>4 AP in Tier 1 unlocks Tier 2.</li> <li>5 AP in Tier 2 unlocks Tier 3.</li> <li>5 AP in Tier 3 unlocks Tier 4.</li> <li>5 AP in Tier 4 unlocks Tier 5 (ultimate ability).</li> </ul> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#483-hybrid-builds","title":"4.8.3 Hybrid Builds","text":"<p>Players are not locked into one branch and can freely mix and match abilities from different branches. It would take 20AP to unlock the ultimate ability in one subclass, the remaining 5AP can be used to invest in other subclasses, allowing for hybrid builds.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#49-levelling-and-progression","title":"4.9 Levelling and Progression","text":"<p>Players can level up to Level 25. As they progress, they gain Ability Points (AP) and Stat Points to unlock new abilities, buffs, or increase core stats.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/4.%20Gameplay%20Mechanics/#levelling-table","title":"Levelling Table","text":"Level Ability Points (AP) Stat Points Max Active Abilities 1 1 2 3 2 1 1 3 3 1 1 3 4 1 1 3 5 1 2 4 6 1 1 4 7 1 1 4 8 1 1 4 9 1 1 4 10 1 2 5 11 1 1 5 12 1 1 5 13 1 1 6 14 1 1 6 15 1 2 7 16 1 1 7 17 1 1 7 18 1 1 7 19 1 2 8 20 1 2 8 - 9 (Unlocking Ult gives extra Ability Slot) 21 1 1 8 - 9 22 1 1 8 - 9 23 1 1 9 - 10 24 1 1 9 - 10 25 1 2 9 - 10"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/5.%20Classes%20and%20Subclasses/","title":"Classes and Subclasses","text":"<p>Warning</p> <p>Work in progress.</p> <p>The game will feature 8 core classes, each with 5 subclass branches that players can explore through skill trees. Players are not locked into a single subclass but can mix and match abilities from different branches, allowing for flexible and highly customizable builds. The subclasses represent distinct themes and archetypes, with each branch focusing on a specific role like tank, healer, support, close DPS, or ranged DPS.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/5.%20Classes%20and%20Subclasses/#51-core-classes-and-subclass-branches","title":"5.1. Core Classes and Subclass Branches:","text":""},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/5.%20Classes%20and%20Subclasses/#511-beastmaster","title":"5.1.1. Beastmaster","text":"<p>Theme: Command of animals, nature, and primal forces Skill Tree Overview: Players can invest in different branches of the Beastmaster\u2019s tree, accessing powerful animal companions, shapeshifting abilities, potions, and totems. Each branch represents a different way of interacting with the natural world.</p> Subclass Branch Description Beast Rider (Tank) Mounted combat, allowing the Beastmaster to ride powerful beasts that absorb damage and protect the rider. Herbalist (Healer) Uses potions and bombs to heal allies, buff them, and occasionally deal damage to enemies. Totem Warden (Support) Places totems that buff allies or debuff enemies, offering strong battlefield control. Primal Shapeshifter (Close DPS) Shapeshifts into various beasts, gaining melee combat abilities and powerful close-range attacks. Skyhunter (Ranged DPS) Commands birds and aerial creatures that attack enemies from a distance, dealing damage over time."},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/5.%20Classes%20and%20Subclasses/#512-bloodshaper","title":"5.1.2. Bloodshaper","text":"<p>Theme: Blood magic and life force manipulation Skill Tree Overview: Bloodshapers can drain life from enemies to empower themselves and their allies, or sacrifice their own health for powerful abilities. Their tree offers a balance between damage, healing, and support through blood magic.</p> Subclass Branch Description Blood Golem (Tank) Sacrifices health to summon a blood-forged golem that absorbs damage on behalf of the Bloodshaper. Vampiric Healer (Healer) Drains life from enemies and transfers it to allies, acting as a vampiric healer. Sanguine Alchemist (Support) Uses blood potions to enhance allies' strength or weaken enemies with powerful alchemical brews. Bloodknight (Close DPS) Sacrifices their own health to deal powerful melee attacks with lifesteal effects. Bloodborne Marksman (Ranged DPS) Infuses arrows or projectiles with blood magic, dealing damage over time and applying curses to enemies."},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/5.%20Classes%20and%20Subclasses/#513-dimensional-reaver","title":"5.1.3. Dimensional Reaver","text":"<p>Theme: Dimensional manipulation, void magic, and space-time distortion Skill Tree Overview: The Dimensional Reaver uses space, time, and shadow manipulation to disrupt enemies and protect allies. Their skill tree allows for phasing between dimensions, controlling shadows, and teleportation-based attacks.</p> Subclass Branch Description Dimensional Bastion (Tank) Uses void shields and dimensional barriers to absorb damage and protect allies. Planar Shaper (Healer) Heals allies by pulling energy and alternate versions of them from parallel dimensions. Phantom Warden (Support) Uses shadows and decoys to confuse enemies and protect allies with stealth tactics. Abyssal Knight (Close DPS) Delivers high-damage melee strikes while teleporting across the battlefield with shadow-infused attacks. Void Sniper (Ranged DPS) Fires void-infused projectiles from a distance, bypassing enemy defenses and dealing long-range damage."},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/5.%20Classes%20and%20Subclasses/#514-echo-weaver","title":"5.1.4. Echo Weaver","text":"<p>Theme: Sound, art, and battlefield control through music and storytelling Skill Tree Overview: The Echo Weaver\u2019s tree allows players to focus on sound manipulation, art-based defence, or rhythm-based melee combat. Each branch emphasizes a different form of battlefield control, whether through music, stories, or dance.</p> Subclass Branch Description Pictomancer (Tank) Uses art-based shields and constructs to absorb damage and protect allies. Storyteller (Healer) Heals and buffs allies by telling magical stories that inspire and restore. Lullaby Sage (Support) Controls the battlefield with sleep-inducing melodies and sound-based debuffs that disorient enemies. Blade Dancer (Close DPS) Melee combat with flowing, dance-based strikes that increase in power the longer the rhythm is maintained. Celestial Conductor (Ranged DPS) Fires sound-based projectiles infused with celestial harmonies to deal ranged damage."},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/5.%20Classes%20and%20Subclasses/#515-elemental-channeler","title":"5.1.5. Elemental Channeler","text":"<p>Theme: Command of primal elements (earth, fire, water, air, lightning) Skill Tree Overview: The Elemental Channeler can focus on different elements to shape their abilities. Each branch represents control over a specific element, offering a variety of offensive and defensive options.</p> Subclass Branch Description Stoneheart (Tank) Uses earth-based defenses, including barriers and high resilience, to absorb damage and protect allies. Tidal Healer (Healer) Water-based healing abilities that wash over allies in waves, purifying and rejuvenating them. Stormcaller (Support) Controls the weather to buff allies and debuff enemies, using lightning, wind, and storms to disrupt opponents. Inferno Blade (Close DPS) Wields fire-infused melee weapons to deliver explosive strikes and devastating close-range attacks. Windstriker (Ranged DPS) Uses air and lightning-based ranged attacks to strike quickly and with precision, dealing long-range damage."},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/5.%20Classes%20and%20Subclasses/#516-fatespinner","title":"5.1.6. Fatespinner","text":"<p>Theme: Manipulation of fate, luck, and probability Skill Tree Overview: The Fatespinner can influence the outcome of battles by altering probabilities and controlling the threads of fate. Players can choose to focus on supporting their allies or bringing bad luck to their enemies.</p> Subclass Branch Description Guardian of Fate (Tank) Manipulates fate to reduce incoming damage, protecting themselves and their allies from fatal strikes. Thread Healer (Healer) Rewrites destiny to heal injuries and reverse harmful effects, restoring health to allies. Luckweaver (Support) Alters probabilities to boost allies' critical hit chances and dodge rates, making luck work in their favor. Fateblade (Close DPS) Delivers melee strikes that manipulate luck to ensure critical hits and increase damage. Destiny Archer (Ranged DPS) Fires arrows that debuff enemies, reducing their chances of success and applying bad luck effects."},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/5.%20Classes%20and%20Subclasses/#517-technomancer","title":"5.1.7. Technomancer","text":"<p>Theme: Blending magic with futuristic technology Skill Tree Overview: The Technomancer\u2019s tree allows players to focus on building and controlling constructs, or using futuristic weapons powered by magic. Their abilities blend both technological and magical effects.</p> Subclass Branch Description Mechguard (Tank) Pilots a magically powered mech suit with shields and force fields, absorbing damage and protecting allies. Nanotech Medic (Healer) Uses healing nanobots to repair allies and restore their health, acting as a highly efficient support. Holo Engineer (Support) Constructs drones and decoys to confuse enemies and bolster allies, providing battlefield control. Cyberblade (Close DPS) Combines high-tech melee weapons with gadgets to deal devastating close-range strikes and finishers. Railgunner (Ranged DPS) Fires long-range, high-powered energy projectiles with devastating accuracy and impact."},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/5.%20Classes%20and%20Subclasses/#52-class-progression-system","title":"5.2. Class Progression System:","text":"<ul> <li>Each class uses a skill tree system where players can invest points into different branches (subclasses).</li> <li>Subclasses represent major branches within the skill tree, but players are free to mix and match abilities across branches, creating hybrid builds that combine tanking, healing, support, and damage roles.</li> <li>Specialization is rewarded by focusing deeply into a single branch, while hybrid builds allow for greater versatility.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/6.%20Combat%20and%20Abilities/","title":"Combat and Abilities","text":"<p>Warning</p> <p>Work in progress.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/6.%20Combat%20and%20Abilities/#61-combat-overview","title":"6.1. Combat Overview","text":"<p>The combat system will be turn-based, using a tactical, grid-based format. Each unit on the battlefield (players and enemies) has a set number of Action Points (AP) and Mana Points (MP) to spend per turn. Players will be able to move, use abilities, or interact with the environment based on how they choose to spend their AP and MP. Combat will rely heavily on positioning, resource management, and synergizing abilities between party members.</p> <ul> <li>Initiative System: Combat turns will be ordered by initiative, which is determined at the start of each encounter by factors like Agility, Luck, or class-specific abilities.</li> <li>Action Points (AP): Used for movement, physical attacks, and non-magical abilities. The amount of AP regenerates each turn based on the player\u2019s stats (e.g., Vitality and Agility).</li> <li>Mana Points (MP): Used to cast spells and magical abilities. MP regenerates per turn based on Arcana and Wisdom stats.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/6.%20Combat%20and%20Abilities/#62-resource-management","title":"6.2. Resource Management","text":"<ul> <li>AP System:<ul> <li>The max AP pool is determined by the Vitality modifier * 3.</li> <li>Regeneration is based on a combination of Agility and Vitality modifiers, with diminishing returns after prolonged combat. The minimum regeneration per turn is 2, and the maximum regeneration is capped by the character\u2019s maximum AP pool.</li> </ul> </li> <li>MP System:<ul> <li>The max MP pool is determined by the Arcana modifier * 3.</li> <li>Regeneration is governed by Wisdom and Arcana modifiers, following the same diminishing returns system as AP. MP regeneration per turn also has a minimum of 2 and a cap based on the maximum MP pool.</li> </ul> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/6.%20Combat%20and%20Abilities/#63-rest-system","title":"6.3. Rest System","text":"<p>Resting is integral to the game\u2019s pacing and strategy. Players will need to rest to recover resources (AP, MP, HP), but each rest will also have consequences in terms of corruption spread throughout the world.</p> <ul> <li>Full Rest:<ul> <li>Fully restores HP, AP, and MP, and resets diminishing returns.</li> <li>Advances corruption significantly, making enemies tougher and courts more difficult to liberate.</li> </ul> </li> <li>Half Rest:<ul> <li>Restores 50% of HP, AP, and MP.</li> <li>Permanently increases AP regeneration by the Vitality modifier and MP regeneration by the Arcana modifier. This increase is subject to the regeneration cap.</li> <li>Causes a moderate spread of corruption, allowing the player to maintain their current strength without the full risk of a full rest.</li> </ul> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/6.%20Combat%20and%20Abilities/#64-status-effects","title":"6.4. Status Effects","text":"<p>Status effects will play a major role in both player and enemy tactics. These can be buffs (positive effects) or debuffs (negative effects) that last for varying durations.</p> <ul> <li>Buffs: Effects that enhance a character\u2019s abilities, such as increased attack, defence, healing, or resistance. Examples include:<ul> <li>Haste: Increases movement and AP regeneration.</li> <li>Fortify: Increases defence and resistance to damage.</li> <li>Rejuvenation: Heals a certain amount of HP per turn.</li> </ul> </li> <li>Debuffs: Negative effects that weaken a character, hinder their abilities, or cause damage over time. Examples include:<ul> <li>Burning: Causes fire damage each turn.</li> <li>Poison: Deals damage over time and reduces healing effectiveness.</li> <li>Weaken: Reduces a character\u2019s attack and defence for a set duration.</li> </ul> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/7.%20Enemy%20Design%20and%20Corruption%20Mechanic/","title":"Enemy Design and Corruption Mechanic","text":"<p>Warning</p> <p>Work in progress.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/7.%20Enemy%20Design%20and%20Corruption%20Mechanic/#71-enemy-variety","title":"7.1. Enemy Variety","text":"<p>Enemies will vary based on the court they belong to and the degree of corruption they\u2019ve suffered. Each court will have its own unique enemy types, inspired by the aesthetics and species from that region. Over time, these enemies will grow stronger as the corruption spreads.</p> <ul> <li>Corrupted Beasts: As corruption spreads, creatures in the wild become twisted versions of themselves, more aggressive and resilient to damage.</li> <li>Court Guardians: Each court will have powerful mini-bosses or elite units that defend the corruption.</li> <li>Final Boss: The Lord Ruler, a demon from a parallel realm, serves as the overarching antagonist. He seeks to conquer the realm while suppressing magic to make demons unkillable.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/7.%20Enemy%20Design%20and%20Corruption%20Mechanic/#72-corruption-mechanic","title":"7.2. Corruption Mechanic","text":"<p>Corruption spreads throughout the courts in response to player actions (or inaction). The longer a court is left unchecked, the more corruption takes hold, increasing enemy difficulty and potentially locking off quests or storylines.</p> <ul> <li>Corruption Progression: Each court has a corruption meter that fills over time, accelerating based on the number of rests or quests ignored.</li> <li>Court Liberation: Liberating a court breaks the corruption's hold, unlocking new abilities and spells specific to that court.</li> <li>Court-Specific Spells and Abilities: Once a court is liberated, players unlock court-specific spells and abilities. If the player is originally from that court, these abilities will be stronger.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/8.%20Player%20Companions%20and%20Party%20System/","title":"Player Companions and Party System","text":"<p>Warning</p> <p>Work in progress.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/8.%20Player%20Companions%20and%20Party%20System/#81-companions","title":"8.1. Companions","text":"<p>The player will be able to recruit various companions from different courts, each with their own backstories, abilities, and special relationships to the courts they hail from. These companions offer distinct abilities based on their class, and some may have unique skills tied to the lore of their home court. Each companion also has personal quests that explore their background and personal motivations.</p> <ul> <li> <p>Companion Classes: Each companion belongs to one of the playable classes and brings their class abilities into the party. Some companions will be tied to the court associated with their class, while others may have a history of conflict or exile from their homeland.</p> </li> <li> <p>Companion Relationships: Player choices, actions, and dialogue can affect relationships with companions. These relationships can unlock bonuses, special skills, or even new storylines for the companion.</p> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/8.%20Player%20Companions%20and%20Party%20System/#82-party-composition","title":"8.2. Party Composition","text":"<p>The party system allows for up to 4 characters, including the player character. Each party member has their own skill trees, and players are encouraged to experiment with different combinations of classes to create synergies.</p> <ul> <li> <p>Class Synergies: The combination of different classes in the party will play a crucial role in combat strategy. For example, a Pictomancer (Echo Weaver tank) could protect a Skyhunter (Beastmaster ranged DPS), while a Vampiric Healer (Bloodshaper) drains life from enemies to heal the party.</p> </li> <li> <p>Flexible Roles: Players can adjust their party\u2019s role composition depending on the situation. For instance, switching between offensive, defensive, and support-oriented characters will be key to adapting to the corruption spread in different courts.</p> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/8.%20Player%20Companions%20and%20Party%20System/#83-party-tactics","title":"8.3. Party Tactics","text":"<p>Players will have the ability to control each character in the party, issuing commands or letting them act according to preset tactics. Each party member will have their own pool of AP and MP to manage during battle.</p> <ul> <li> <p>Tactical Combat: Players can position their party members on the battlefield for optimal coverage. Frontline tanks like Dimensional Bastion or Beast Rider can hold the line, while ranged units like Void Sniper or Destiny Archer can deal damage from a distance.</p> </li> <li> <p>Companion Abilities: Each companion brings a specific set of abilities to the party based on their class and specialization, providing healing, buffs, crowd control, or damage output. Players can switch between manual control and AI-driven tactics for party members.</p> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/9.%20Quest%20and%20Story%20Progression/","title":"Quest and Story Progression","text":"<p>Warning</p> <p>Work in progress.</p>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/9.%20Quest%20and%20Story%20Progression/#91-overarching-story","title":"9.1. Overarching Story","text":"<p>The world is structured with courts surrounding the Lord Ruler\u2019s domain at the centre of the realm. Each court represents one of the playable classes, and players will gradually liberate these courts from the growing corruption. The courts are interconnected, and the player can move freely between them, allowing access to class-specific content without being locked out based on their current class choice. As time passes, corruption spreads, making it harder to clear courts that are not yet liberated.</p> <ul> <li> <p>Interconnected Map: The map is structured in concentric rings, with courts surrounding the Lord Ruler\u2019s central domain. Players can navigate freely between courts, choosing the order in which they tackle them. Courts not yet liberated become more corrupted over time, increasing enemy difficulty and adding urgency to the player's decisions.</p> </li> <li> <p>Class-Based Courts: Each court represents a specific playable class, tied to its lore, culture, and aesthetics. Liberating a court grants access to class-specific abilities and spells. Players will still have access to these courts even if they are playing the class from that region, ensuring they can experience all aspects of the world.</p> </li> <li> <p>Player\u2019s Origin: The player begins in a prison located in a parallel realm, where they were banished by the Lord Ruler for their ties to nobility. The story will reveal that certain families were kidnapped and hidden, with deep secrets about the true rulers of the realm. It will become apparent that the player was the High Prince(ss), whom was the protector of all the courts in the realm.</p> </li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/9.%20Quest%20and%20Story%20Progression/#92-quest-structure","title":"9.2. Quest Structure","text":"<ul> <li>Main Quests: Central to the progression of the story, focusing on freeing the courts and defeating the Lord Ruler. Main quests advance the plot and unlock new regions on the map.</li> <li>Court Quests: Each court has its own storyline, reflecting the traits and values of the playable class associated with it. For example, a court tied to the Elemental Channeler might focus on mastering primal forces and balancing natural elements, while a court tied to the Technomancer could revolve around technological revolutions.</li> <li>Side Quests: Optional but enriching quests that offer insight into the world, the people, and the backstories of your companions. These quests often provide valuable rewards and lore.</li> </ul>"},{"location":"0.%20Game%20Design/0.%20Games%20Design%20Document/9.%20Quest%20and%20Story%20Progression/#93-multiple-endings","title":"9.3. Multiple Endings","text":"<p>The player\u2019s choices will determine how much of the realm they successfully liberate and how much corruption spreads. The number of courts successfully liberated, the allies gained, and the overall corruption level will affect the ending, with different outcomes ranging from total victory to a partial victory or total failure if corruption overwhelms the realm.</p>"},{"location":"0.%20Game%20Design/1.%20Further%20Design%20Information/0.%20Further%20Design%20Documentation%20Hub/","title":"Further Design Documentation Hub","text":"<p>Welcome to the Further Design Documentation Hub, where you\u2019ll find detailed insights into the extended design decisions, additional mechanics, and creative aspects of the game. This documentation goes beyond the Game Design Document (GDD) to cover in-depth design elements, evolving features, world-building, and much more.</p> <p>Explore the sections below for detailed information about the game's design philosophy, art direction, character progression, and other features that bring the game to life.</p>"},{"location":"0.%20Game%20Design/1.%20Further%20Design%20Information/0.%20Further%20Design%20Documentation%20Hub/#sections","title":"Sections","text":""},{"location":"0.%20Game%20Design/1.%20Further%20Design%20Information/0.%20Further%20Design%20Documentation%20Hub/#1-expanded-gameplay-mechanics","title":"1. Expanded Gameplay Mechanics","text":"<p>This section delves deeper into the gameplay mechanics that build on the core concepts outlined in the GDD. It explores advanced systems that offer players greater interaction, customization, and strategy.</p> <ul> <li>Fog of War System: How unexplored areas of the map remain hidden until the player progresses, and the strategic implications of uncovering hidden regions.</li> <li>Resting and Time Progression: A dynamic rest system that influences how the player regains action points (AP) and mana points (MP), and how it correlates to the spread of corruption across the game world.</li> <li>Dynamic Weather and Environmental Effects: The influence of environmental effects on gameplay, including weather conditions that affect movement, combat, and visibility.</li> </ul>"},{"location":"0.%20Game%20Design/1.%20Further%20Design%20Information/0.%20Further%20Design%20Documentation%20Hub/#2-character-and-class-development","title":"2. Character and Class Development","text":"<p>This section explores the detailed design of character progression, classes, and how players can customize their characters beyond typical RPG mechanics.</p> <ul> <li>Class Trees and Specialization: A deeper look at the skill trees for each class, including how players can spec into multiple subclasses and unlock unique abilities.</li> <li>Hybrid Classes: How players can mix and match abilities from different classes to create hybrid characters with versatile skill sets.</li> <li>Class-Specific Mechanics: Detailed information on how each class handles specific gameplay elements, such as summoning, healing, or crafting.</li> </ul>"},{"location":"0.%20Game%20Design/1.%20Further%20Design%20Information/0.%20Further%20Design%20Documentation%20Hub/#3-world-building-and-story-integration","title":"3. World-Building and Story Integration","text":"<p>The game's world is rich with lore, history, and complex political dynamics. This section covers the world-building process and how it integrates into the player's journey.</p> <ul> <li>Courts and Regions: Each Court in the game represents a different cultural and visual theme. Learn how these courts differ in terms of aesthetics, gameplay mechanics, and lore.</li> <li>Factions and Political Dynamics: Explore the various factions that control the courts and how the player's decisions impact alliances, power dynamics, and the overall progression of the story.</li> <li>Environmental Storytelling: How world-building and environmental design communicate the game's narrative without direct exposition.</li> </ul>"},{"location":"0.%20Game%20Design/1.%20Further%20Design%20Information/0.%20Further%20Design%20Documentation%20Hub/#4-visual-and-art-design","title":"4. Visual and Art Design","text":"<p>This section focuses on the visual direction of the game, from character design to environmental aesthetics, and how art design enhances the player\u2019s immersion.</p> <ul> <li>Aesthetic Themes by Region: Each region has its own visual theme based on the court it belongs to. Discover the art choices for areas like the fiery landscapes of the Inferno Court or the icy domains of the Frost Court.</li> <li>Character and Creature Design: The creative process behind designing unique characters, species, and enemies for each court. Includes design notes on how visual elements reinforce gameplay mechanics (e.g., enemies that visually reflect their elemental power).</li> <li>Concept Art: Early concept art and visual references that helped shape the final design of the game's world and characters.</li> </ul>"},{"location":"0.%20Game%20Design/1.%20Further%20Design%20Information/0.%20Further%20Design%20Documentation%20Hub/#5-user-interface-ui-and-user-experience-ux-design","title":"5. User Interface (UI) and User Experience (UX) Design","text":"<p>This section covers the design principles behind the UI/UX, ensuring the game is not only visually appealing but also easy to navigate and understand.</p> <ul> <li>HUD Design: Breakdown of the in-game heads-up display (HUD), including how it provides the player with real-time feedback on health, mana, abilities, and status effects.</li> <li>Menu and Navigation Flow: How the player interacts with the game\u2019s menus, from character creation to inventory management, ensuring smooth navigation and a seamless experience.</li> <li>Customizable UI: Future plans for allowing players to customize their UI to fit their playstyle, including adjustable hotkeys, HUD layout changes, and color schemes.</li> </ul>"},{"location":"0.%20Game%20Design/1.%20Further%20Design%20Information/0.%20Further%20Design%20Documentation%20Hub/#6-evolving-features-and-planned-expansions","title":"6. Evolving Features and Planned Expansions","text":"<p>As the game progresses, additional features and systems will be developed to enhance the experience. This section outlines evolving features and future plans for the game's expansion.</p> <ul> <li>New Classes and Abilities: Planned future classes and abilities that may be added based on player feedback and game progression.</li> <li>World Expansions: Potential expansions to the game world, introducing new courts, regions, and lore as the game grows.</li> <li>Multiplayer Features: Long-term plans for introducing multiplayer elements, such as co-op gameplay, competitive modes, or shared world experiences.</li> </ul>"},{"location":"0.%20Game%20Design/1.%20Further%20Design%20Information/0.%20Further%20Design%20Documentation%20Hub/#conclusion","title":"Conclusion","text":"<p>The Further Design Documentation Hub provides a detailed exploration of the extended design features and creative direction of the game. From gameplay mechanics and class progression to world-building and art design, this hub serves as the key reference for all design-related aspects that evolve as development continues.</p>"},{"location":"0.%20Game%20Design/1.%20Further%20Design%20Information/Classes/Classes/","title":"Classes Overview","text":"<p>Warning</p> <p>Work in progress.</p> Class Tank Subclass Healer Subclass Support Subclass Close DPS Subclass Ranged DPS Subclass Beastmaster Beast Rider: Mounted combat with defensive beasts that absorb damage. Herbalist: Uses potions and bombs to heal allies, buff them, and deal damage to enemies. Totem Warden: Places totems to buff allies and weaken enemies. Primal Shapeshifter: Shapeshifts into powerful beasts for devastating melee attacks. Skyhunter: Commands birds and aerial creatures for ranged damage over time. Bloodshaper Blood Golem: Sacrifices health to summon a blood-forged golem to absorb damage. Vampiric Healer: Drains life from enemies to heal allies and redistribute health. Sanguine Alchemist: Uses blood potions to enhance allies or weaken enemies. Bloodknight: Sacrifices health to increase melee damage output and lifesteal. Bloodborne Marksman: Ranged blood-infused attacks with damage over time and curses. Dimensional Reaver Dimensional Bastion: Uses void shields and dimensional barriers to absorb damage. Planar Shaper: Heals by pulling energy and alternate versions of allies from parallel dimensions. Phantom Warden: Uses shadows and decoys to protect allies and confuse enemies. Abyssal Knight: Shadow-infused melee strikes with blink attacks. Void Sniper: Void projectiles with teleportation to reposition. Echo Weaver Pictomancer: Uses art-based shields and constructs to absorb damage. Storyteller: Heals and empowers allies through magical storytelling. Lullaby Sage: Battlefield control with sleep-inducing melodies and sound debuffs. Blade Dancer: Melee combat with flowing, dance-based strikes. Celestial Conductor: Long-range music-based attacks with celestial harmonies. Elemental Channeler Stoneheart: Earth-based defenses with barriers and high resilience. Tidal Healer: Water-based healing with waves of restoration and purification. Stormcaller: Controls weather to buff allies and debuff enemies. Inferno Blade: Fire-infused melee strikes with explosive damage. Windstriker: Air and lightning-based ranged attacks with high speed and precision. Fatespinner Guardian of Fate: Bends fate to reduce incoming damage and avoid fatal attacks. Thread Healer: Rewrites destiny to heal injuries and reverse harmful effects. Luckweaver: Alters probabilities to boost allies' critical chances and dodge rates. Fateblade: Melee strikes that manipulate luck to ensure critical hits. Destiny Archer: Launches arrows that debuff enemies and inflict bad luck. Technomancer Mechguard: Pilots a magically-powered mech suit with shields and force fields. Nanotech Medic: Uses healing nanobots to repair and restore health. Holo Engineer: Constructs drones and decoys for battlefield control. Cyberblade: Energy-infused melee attacks using gadgets and tech. Railgunner: Fires long-range, high-powered energy projectiles."},{"location":"1.%20Code%20Documentation/Code%20Documentation%20Hub/","title":"Code Documentation Hub","text":"<p>Welcome to the Code Documentation Hub for the project. This page serves as the central resource for all technical details, including system architecture, core classes, engine integration, and gameplay mechanics. Whether you're a developer, contributor, or interested party, this hub will provide you with a detailed understanding of the game's code and systems.</p>"},{"location":"1.%20Code%20Documentation/Code%20Documentation%20Hub/#sections","title":"Sections","text":""},{"location":"1.%20Code%20Documentation/Code%20Documentation%20Hub/#1-system-architecture","title":"1. System Architecture","text":"<p>This section provides a comprehensive overview of the core C++ architecture that drives the game. It includes class hierarchies, key systems, and how different components communicate.</p> <ul> <li>Main Classes: Breakdowns of the main game classes such as <code>TacticalPlayerController</code>, <code>TacticalCharacter</code>, and the various manager classes.</li> <li>Subsystems: An overview of core subsystems like the Gameplay Ability System (GAS), Combat System, and Character Stats Management.</li> <li>Data Structures: Detailed descriptions of the primary data structures used for character stats, ability calculations, and inventory systems.</li> </ul>"},{"location":"1.%20Code%20Documentation/Code%20Documentation%20Hub/#2-gameplay-ability-system-gas","title":"2. Gameplay Ability System (GAS)","text":"<p>The Gameplay Ability System (GAS) is a key feature in Unreal Engine 5 that handles abilities, attributes, and effects. This section dives deep into:</p> <ul> <li>Ability System Component: How the ability system is implemented for each character and how abilities are triggered.</li> <li>Attributes and Modifiers: How the player\u2019s stats (e.g., health, mana, stamina) are set up and modified by abilities.</li> <li>Gameplay Effects: A guide to creating custom effects (e.g., damage, healing, buffs, debuffs) and applying them to players and enemies.</li> <li>Ability Activation: How abilities are activated, and the process flow for determining their success, cost, and cooldown.</li> </ul>"},{"location":"1.%20Code%20Documentation/Code%20Documentation%20Hub/#3-movement-and-camera-systems","title":"3. Movement and Camera Systems","text":"<p>This section outlines how player movement and camera systems are implemented in the game, covering both in-combat and out-of-combat scenarios.</p> <ul> <li>Character Movement: Detailed explanation of how characters are moved across the map using navigation systems and pathfinding.</li> <li>Camera Control: How the player can pan, zoom, and rotate the camera to view the battlefield. Includes information on both WASD controls and mouse panning.</li> <li>Party Management: Managing multiple characters in a tactical party system, including switching between different characters.</li> </ul>"},{"location":"1.%20Code%20Documentation/Code%20Documentation%20Hub/#4-combat-system-and-turn-based-logic","title":"4. Combat System and Turn-Based Logic","text":"<p>The Combat System is one of the most important aspects of the game. This section provides an overview of the turn-based system, initiative, and action management.</p> <ul> <li>Turn-Based Combat Flow: Explanation of the game's turn-based logic, including how turns are calculated and how actions (movement, attacks, abilities) are resolved.</li> <li>Action Points (AP) System: A breakdown of how AP is consumed for movement, attacks, and special abilities. This also includes how AP is regenerated and how it interacts with player stats.</li> <li>Initiative System: How the initiative order is calculated and how players can influence turn order with their characters' stats.</li> </ul>"},{"location":"1.%20Code%20Documentation/Code%20Documentation%20Hub/#5-code-snippets-and-samples","title":"5. Code Snippets and Samples","text":"<p>This section provides practical code snippets that demonstrate key functionalities, including player actions, camera movement, and more.</p> <ul> <li>Character Movement: Example code for character movement using Unreal Engine\u2019s Navigation System.</li> <li>Ability Activation: A sample function that shows how abilities are triggered and how their effects are applied.</li> <li>Custom Gameplay Effects: How to create and apply custom gameplay effects to players or enemies.</li> </ul>"},{"location":"1.%20Code%20Documentation/Code%20Documentation%20Hub/#6-optimization-and-best-practices","title":"6. Optimization and Best Practices","text":"<p>To ensure smooth performance, this section outlines the optimization strategies used in the project, focusing on efficient memory usage and gameplay logic optimization.</p> <ul> <li>Blueprint and C++ Integration: Tips for balancing blueprints with C++ for optimal performance and rapid prototyping.</li> <li>Memory Management: Efficient handling of large game worlds, assets, and data using Unreal Engine's World Partition system.</li> <li>Performance Profiling: Tools and methods for profiling the game\u2019s performance to identify bottlenecks and improve frame rates.</li> </ul>"},{"location":"1.%20Code%20Documentation/Code%20Documentation%20Hub/#7-unreal-engine-workflows","title":"7. Unreal Engine Workflows","text":"<p>This section describes the custom tools, pipelines, and workflows that were created in Unreal Engine 5 to streamline development and improve collaboration.</p> <ul> <li>Custom Tools: Editor extensions, automated testing tools, and asset management pipelines built for efficiency.</li> <li>Editor Workflows: How we handle level streaming, asset loading, and in-editor debugging to speed up the development process.</li> <li>Multiplayer and Networked Systems: How networked systems are being implemented for potential future multiplayer features.</li> </ul>"},{"location":"1.%20Code%20Documentation/Code%20Documentation%20Hub/#conclusion","title":"Conclusion","text":"<p>This Code Documentation Hub serves as the central resource for all technical aspects of the game development process. Whether you\u2019re working on the codebase or looking to understand the inner workings of the game, this hub provides a detailed guide to the systems, tools, and strategies used in the project.</p>"},{"location":"2.%20Engine%20Workflows/Engine%20Workflows%20Documentation%20Hub/","title":"Engine Workflows Hub","text":"<p>Welcome to the Engine Workflows Hub, your resource for all Unreal Engine 5 workflows and tools used in the game\u2019s development. This hub covers the development pipelines, level design methodologies, asset management strategies, and custom workflows implemented to streamline the production process.</p> <p>Explore the sections below to dive into the engine processes that power the game\u2019s world, systems, and mechanics.</p>"},{"location":"2.%20Engine%20Workflows/Engine%20Workflows%20Documentation%20Hub/#sections","title":"Sections","text":""},{"location":"2.%20Engine%20Workflows/Engine%20Workflows%20Documentation%20Hub/#1-level-design-and-world-creation","title":"1. Level Design and World Creation","text":"<p>This section explains the workflows used to design and populate the game world. Learn how the levels are constructed, streamed, and managed to maintain both performance and player immersion.</p> <ul> <li>World Partition: How Unreal Engine\u2019s World Partition system is used to create large, seamless maps with efficient loading and memory management.</li> <li>Level Streaming: Techniques for streaming in level sections based on player proximity to reduce load times and improve performance.</li> <li>Environment Design: A step-by-step look at how environments are crafted, from terrain sculpting to lighting and environmental effects.</li> </ul>"},{"location":"2.%20Engine%20Workflows/Engine%20Workflows%20Documentation%20Hub/#2-asset-management","title":"2. Asset Management","text":"<p>Managing assets efficiently is critical for any large project. This section outlines the best practices for asset management, including file organization, version control, and texture optimization.</p> <ul> <li>Naming Conventions and Organization: How assets are named and structured to ensure consistency across the project.</li> <li>Version Control: How we use version control systems like Git or Perforce to manage multiple contributors and track changes.</li> <li>LOD and Texture Optimization: Techniques for optimizing assets using Level of Detail (LOD) systems and texture compression to ensure performance remains smooth.</li> </ul>"},{"location":"2.%20Engine%20Workflows/Engine%20Workflows%20Documentation%20Hub/#3-blueprints-and-c-integration","title":"3. Blueprints and C++ Integration","text":"<p>While the game is built primarily in C++, Blueprints are used extensively for rapid prototyping and quick iteration. This section covers how Blueprints and C++ are integrated for maximum flexibility and performance.</p> <ul> <li>Blueprint for Prototyping: How Blueprints are used for rapid iteration during the prototyping phase before transitioning into more efficient C++ code.</li> <li>C++ for Core Systems: Core gameplay mechanics, such as movement, combat, and abilities, are written in C++ to ensure performance.</li> <li>Blueprint/C++ Hybrid: How some systems, like user interfaces or visual effects, use a hybrid approach of both Blueprint scripting and C++ backend.</li> </ul>"},{"location":"2.%20Engine%20Workflows/Engine%20Workflows%20Documentation%20Hub/#4-automation-and-tools","title":"4. Automation and Tools","text":"<p>To speed up development, custom tools and automation pipelines have been implemented. This section details how tools are built and utilized to streamline workflows and reduce manual labor.</p> <ul> <li>Editor Extensions: Custom editor tools that have been created to simplify level design, asset placement, or repetitive tasks.</li> <li>Automation Pipelines: Automated systems for testing, building, and packaging the game to ensure stability across different builds and platforms.</li> <li>Performance Profiling: Tools used to profile the game for performance, allowing us to identify and resolve bottlenecks during development.</li> </ul>"},{"location":"2.%20Engine%20Workflows/Engine%20Workflows%20Documentation%20Hub/#5-engine-optimization","title":"5. Engine Optimization","text":"<p>Ensuring that the game runs smoothly across a variety of hardware configurations is a key concern. This section dives into the optimization workflows used throughout development.</p> <ul> <li>Performance Targets: Targeting stable frame rates and smooth gameplay on both high-end and mid-range systems.</li> <li>Memory Management: Efficient use of memory to handle large environments, assets, and complex gameplay mechanics.</li> <li>GPU and CPU Profiling: Profiling tools used to analyze GPU and CPU usage, and how we address performance bottlenecks.</li> </ul>"},{"location":"2.%20Engine%20Workflows/Engine%20Workflows%20Documentation%20Hub/#6-custom-tools-and-pipelines","title":"6. Custom Tools and Pipelines","text":"<p>This section covers the custom tools and pipelines built specifically for the game, designed to increase efficiency and improve development workflows.</p> <ul> <li>Custom Blueprint Nodes: Custom nodes developed in C++ to extend Blueprint functionality, allowing for more flexible and powerful game logic.</li> <li>Asset Import Pipelines: Tools that streamline the process of importing and preparing assets for the game, from 3D models to textures and animations.</li> <li>Procedural Content Generation: How procedural generation tools are used to create dynamic environments and world elements.</li> </ul>"},{"location":"2.%20Engine%20Workflows/Engine%20Workflows%20Documentation%20Hub/#7-multiplayer-and-networked-systems","title":"7. Multiplayer and Networked Systems","text":"<p>While the game is primarily single-player, future expansions into multiplayer are considered. This section outlines how networked systems are being implemented in preparation for potential multiplayer features.</p> <ul> <li>Replication: How player actions, abilities, and movement are replicated across clients in a networked environment.</li> <li>Server Architecture: Initial plans for server-client architecture to handle multiplayer game modes.</li> <li>Multiplayer Testing: How multiplayer systems are tested and optimized for lag-free performance and player synchronization.</li> </ul>"},{"location":"2.%20Engine%20Workflows/Engine%20Workflows%20Documentation%20Hub/#conclusion","title":"Conclusion","text":"<p>The Engine Workflows Hub serves as a comprehensive guide to the engine processes that power the game\u2019s development. From level design to asset management, optimization to automation, this hub is designed to provide insights into the tools and strategies used to build the game efficiently in Unreal Engine 5.</p>"}]}